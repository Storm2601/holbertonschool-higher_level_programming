doctest 0-add_integer.py
============================
# This function add two add_integer

>>> add_integer = __import__('0-add_integer').add_integer

Test success
================
>>> add_integer(1,2)
3

>>> add_integer (50, -8)
42

>>> add_integer(-2, 20)
18

>>> add_integer(1.5, 1.5)
2

>>> add_integer(100.3, -2)
98

>>> add_integer(20, 0.2)
20

>>> add_integer(20)
118

==================
Test fails
==================

>>> add_integer(1, "Holberton")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("School", 6)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer("School", "Holberton")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(1, 2, 3)
Traceback (most recent call last):
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> add_integer(4, [1, 2])
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(6, None)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(float("NaN"), 1)
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(float('inf'), 0)
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
